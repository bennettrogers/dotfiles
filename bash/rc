#!/bin/bash
rcfiles=$HOME/.homesick/repos/dotfiles

system=`$rcfiles/system`

# Set flag if this session is interactive
if [ -n "$PS1" ]; then
    INTERACTIVE_SESSION=true
fi

# Set up homeshick
source $HOME/.homesick/repos/homeshick/homeshick.sh

# Source local environment settings
if [ -f ~/.bash_local ]; then
    source ~/.bash_local
fi

# Source color aliases
source $rcfiles/bash/colors

# Source aliases settings
source $rcfiles/aliases

# Source bash completion settings
source $rcfiles/bash/completion

# Source platform-specific bashrc files
if [ "$system" == 'Linux' ]; then
    source $rcfiles/bash/rc.linux
fi
if [ "$system" == 'OSX' ]; then
    source $rcfiles/bash/rc.osx
fi

# Set hostname var if it doesn't exist
if [ ! -n "$HOSTNAME" ]; then
    HOSTNAME=`hostname -s`
fi

# Fix sorting of ls (dotfiles first!)
# C.UTF-8 is preferred (like C, but with utf8 support)
if locale -a | grep -qF 'C.UTF-8'; then
    loc="C.UTF-8"
else
    loc="en_US.UTF-8"
fi
export LANG=$loc
export LC_ALL=$loc

# Set Bash to vi mode
set -o vi

# Set default editor to Vim
export EDITOR=vim

# Ignore some controlling instructions
# HISTIGNORE is a colon-delimited list of patterns which should be excluded.
# The '&' is a special pattern which suppresses duplicate entries.
export HISTIGNORE=$'[ \t]*:&:[fb]g:exit:ls' # Ignore the ls command as well

# Don't put duplicate lines or lines starting with a space in the history.
export HISTCONTROL=ignoreboth

export HISTSIZE=32768
export HISTFILESIZE=$HISTSIZE

# Append to the history file, don't overwrite it
shopt -s histappend

# Check the window size after each command and, if necessary,
# Update the values of LINES and COLUMNS.
shopt -s checkwinsize

# Case-insensitive globbing (used in pathname expansion)
shopt -s nocaseglob

# Autocorrect typos in path names when using `cd`
shopt -s cdspell

# Enable some Bash 4 features when possible:
# * `autocd`, e.g. `**/qux` will enter `./foo/bar/baz/qux`
# * Recursive globbing, e.g. `echo **/*.txt`
for option in autocd globstar; do
    shopt -s "$option" 2> /dev/null
done

# Prevent Ctrl-s and Ctrl-q from sending XOFF and XON signals
# Allows them to be used elsewhere
stty -ixon

##############################################################################
# INTERACTIVE SESSION ONLY

if $INTERACTIVE_SESSION; then

    # activate virtualenvwrapper (lazy means it won't be sourced until needed)
    if [[ -f /usr/local/bin/virtualenvwrapper_lazy.sh ]]; then
        source /usr/local/bin/virtualenvwrapper_lazy.sh
    elif [[ -f /usr/bin/virtualenvwrapper_lazy.sh ]]; then
        source /usr/bin/virtualenvwrapper_lazy.sh
    fi

    ##########################################################################
    # PROMPT
    GIT_PS1_SHOWDIRTYSTATE=true

    # Username@host
    PS1="${txtcyn}\u${txtblu}@${txtgrn}\h"

    # Stopped process count
    PS1=$PS1${txtpur}'$( if [ $(jobs -s | wc -l) -gt 0 ]; then echo " [\j]"; fi )'

    # Current directory
    PS1=$PS1${txtblu}" \w"

    # Current git branch
    if type __git_ps1 >/dev/null 2>&1; then
        PS1=$PS1${txtylw}'$(__git_ps1 " (%s)")'
    fi

    # Finish the prompt
    PS1=$PS1"\n${txtwht}\$ ${txtdef}"

    ##########################################################################

    # Prioritize local bins in path
    export PATH="$HOME/bin:$PATH"

    # set the terminfo such that it also works via ssh
    { infocmp -1 xterm-256color ; echo -e "\tsitm=\\E[3m,\n\tritm=\\E[23m,"; } > /tmp/xterm-256color.terminfo
    tic /tmp/xterm-256color.terminfo

    # autostart tmux
    if [ "$PS1" != "" -a "${TMUX}" == "" -a "${SSH_TTY:-x}" != x ]; then
        # attempt to discover a detached session and attach it,
        # else create a new session
        WHOAMI=$(whoami)
        tmux -f ~/.tmux/conf/tmux.conf new-session -A -s $WHOAMI
    fi

fi

##############################################################################

# Clean up
unset rcfiles
unset system
